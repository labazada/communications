- comprobar de alguna manera que ML_SMCAlgorithm recibe como estimador de canal un KalmanEstimator
- optimizar las Particles para que en el constructor copia solo se copien las matrices ocupadas
- en ParticleWithCh... comprobar que la matriz pasada en los metodos Set tiene el tamaño adecuado
- mas comprobaciones en los métodos de Particle y derivados
- pasar todo lo que sea posible por referencia (los preamble a los algoritmos)
- variable endResamplingTime en SMCAlgorithm::Resampling
- pasar las observaciones por referencia
- en ML_SMCAlgorithm
  - nObservations ya no vale para nada
  - mFirstColumns pilla una columna de mas
- StdResamplingAlgorithm no tiene codigo
- ML_UnknownChannelOrderSMCAlgorithm
  - sustituir _startDetectionSymbolVector-_startDetectionObservation+iObservationToBeProcessed por otra cosa
- añadir simbolos para suavizado, no bits
- quitar nParticlesPerChannelOrder de UnknownChannelOrderSMCAlgorithm
- que todos los algoritmos reciban un puntero al algoritmo de remuestreo o ninguno
- eliminar _iFirstObsevation de UnknownChannelOrderAlgorithm
- añadir el atributo _antennasChannelOrder a MIMOChannel (y el método get correspondiente)
- reestructurar las clases relacionadas con el ruido (que no se cree la matriz de ruido en la clase base)
- definir preambulo en algun lugar más alto de la jerarquía
- meter todas las comprobaciones dentro de un #ifdef DEBUG
- KnownChannelOrderAlgorithm::ProcessTrainingSequence que no devuelva matrices vacías para la zona del preambulo (para ser coherente con UnknownChannelOrderAlgorithm::ProcessTrainingSequence)
- eliminar "_d" de MultipleChannelEstimatorsPerParticleSMCAlgorithm y sus clases derivadas
- para calcular la overallPe y mse, hacer la división al final
- memcpy para hacer copias de arrays (en el remuestreo por ejemplo)